"use strict";(self.webpackChunktemusaurio=self.webpackChunktemusaurio||[]).push([[575],{2582:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"kubernetes/services","title":"Kubernetes: Services & Networking","description":"Expose applications via ClusterIP, NodePort, LoadBalancer, and Ingress.","source":"@site/docs/kubernetes/services.md","sourceDirName":"kubernetes","slug":"/kubernetes/services","permalink":"/docs/kubernetes/services","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes/services.md","tags":[],"version":"current","frontMatter":{},"sidebar":"kubernetesSidebar","previous":{"title":"Kubernetes Documentation","permalink":"/docs/kubernetes/intro"}}');var t=r(4848),o=r(8453);const i={},c="Kubernetes: Services & Networking",a={},l=[{value:"Common Types",id:"common-types",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"kubernetes-services--networking",children:"Kubernetes: Services & Networking"})}),"\n",(0,t.jsx)(n.p,{children:"Expose applications via ClusterIP, NodePort, LoadBalancer, and Ingress."}),"\n",(0,t.jsx)(n.h2,{id:"common-types",children:"Common Types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ClusterIP (default): internal-only"}),"\n",(0,t.jsxs)(n.li,{children:["NodePort: exposes on each node IP",":port"]}),"\n",(0,t.jsx)(n.li,{children:"LoadBalancer: uses external LB (cloud)"}),"\n",(0,t.jsx)(n.li,{children:"Ingress: L7 routing with controllers"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example Service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: web-svc\nspec:\n  selector:\n    app: web\n  ports:\n    - port: 80\n      targetPort: 8080\n  type: ClusterIP\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Next: ",(0,t.jsx)(n.a,{href:"/docs/kubernetes/configuration",children:"Configuration"})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(6540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);